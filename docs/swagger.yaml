definitions:
  models.CreatePost:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  models.Post:
    properties:
      content:
        type: string
      created_at:
        type: string
      post_id:
        type: integer
      title:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  models.RegisterUser:
    properties:
      confirm_password:
        type: string
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        type: string
    type: object
  models.UpdateUser:
    properties:
      first_name:
        type: string
      last_name:
        type: string
    type: object
  models.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      password:
        type: string
      posts:
        items:
          $ref: '#/definitions/models.Post'
        type: array
      updated_at:
        type: string
    type: object
  models.UserLogin:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login the user
      parameters:
      - description: User login
        in: body
        name: userLogin
        required: true
        schema:
          $ref: '#/definitions/models.UserLogin'
      produces:
      - application/json
      responses:
        "200":
          description: Logged in
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "401":
          description: Invalid password
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Login the user
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Register a new user
      parameters:
      - description: User register
        in: body
        name: userRegister
        required: true
        schema:
          $ref: '#/definitions/models.RegisterUser'
      produces:
      - application/json
      responses:
        "201":
          description: User registered
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Register a new user
      tags:
      - auth
  /posts:
    post:
      consumes:
      - application/json
      description: Create a post
      parameters:
      - description: Post
        in: body
        name: post
        required: true
        schema:
          $ref: '#/definitions/models.CreatePost'
      produces:
      - application/json
      responses:
        "201":
          description: Created post
          schema:
            type: string
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Create a post
      tags:
      - posts
  /posts/{id}:
    delete:
      description: Delete a post
      parameters:
      - description: Post ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Deleted post
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a post
      tags:
      - posts
  /posts/all:
    get:
      description: Get all posts
      produces:
      - application/json
      responses:
        "200":
          description: Posts
          schema:
            $ref: '#/definitions/models.Post'
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all posts
      tags:
      - posts
  /posts/user:
    get:
      description: Get all posts from a user
      produces:
      - application/json
      responses:
        "200":
          description: Posts
          schema:
            $ref: '#/definitions/models.Post'
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all posts from a user
      tags:
      - posts
  /users:
    delete:
      description: Delete a user
      produces:
      - application/json
      responses:
        "200":
          description: Deleted user
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Delete a user
      tags:
      - users
    get:
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: Users
          schema:
            $ref: '#/definitions/models.User'
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Get all users
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Update a user
      parameters:
      - description: User update
        in: body
        name: userUpdate
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: Updated user
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad request
          schema:
            type: string
        "500":
          description: Internal server error
          schema:
            type: string
      summary: Update a user
      tags:
      - users
swagger: "2.0"
